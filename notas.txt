TRABAJOS IMPLEMENTADOS

- Desarrollo de aplicación de lectura de datos en PC. (1 día)
Se implementó un servidor multithreaded basado en Sockets TCP
Toma la lectura del WEMOS que envía con cierta tasa.
Muestra en un visor de tipo trending, con un span de 100 muestras que cubren 2000 segundos (considerando Ts=20s)

- Desarrollo de la aplicación del WEMOS. (1 día)
Es un cliente WiFi que adquiere la señal analógica en instantes regulares y transmite la información por medio de la escritura en un socket TCP. Entre escrituras permanece en modo deep sleep para ahorrar energía. Se despierta con una señal por D0 que activa RST. La señal de activación se temporiza para mantener una tasa de muestreo constante (muestrear a intervalos regulares). Hay un jitter en la transmisión pues al reconectar la antena de WiFi, el WEMOS se demora intervalos variables en acceder al AP. 

- Medición de consumo y estimación de autonomía. (1 día)
Armé una fuente conmutada de 3.2V y con una Rshunt de 1.25 ohm medí la corriente. Tomé un promedio de 57mA durante la transmisión y 1.1mA en deep sleep. Con la aplicación de captura registré durante toda la noche un total de 2000 muestras del tiempo que dormía en una adquisición basada en un muestreo de 20s, llegando a un tiempo promedio de actividad de 4.36ms. Con este dato extrapolé el DT para otros períodos de muestreo y estimé la autonomía para distintos modelos de pilas de 3.2V basadado en su capacidad especificada. 

- Conexion del sensor al WEMOS. (1 día)
Prueba del sensor con placa Arduino. Medición de los valores analógicos. Verificación del funcionamiento del sensor con fuente de 3.3V. Verificación del rango de salida cuando se alimenta con 3.3V al sensor BDAP.
Conexión al WEMOS. Adquisición analógica y transmisión de la señal de presión a la PC.
Se descarta la interfase analógica. Es más versátil la digital, pues brinda más información del sensor (transductor+placa).  
Desarrollo del protocolo basado en I2C para la lectura de datos digitales de presión, temperatura y estado del sensor.
Transmisión a la computadora de los valores de presión, temperatura (aún sin escalar por falta de la 40AN7000), y status (importante para saber si el sensor no está colgado, cosa que no teníamos con el adquisidor analógico).
Incorporación de jumper para preveer 2 tipos de estrategias de conexión:
        a) sin deepsleep, Ts=5s
        b) con deepsleep, Ts=30s
Incorporación de jumper para setear por HW el log de datos por usb


- Modificación aplicación PC. (1/2 día)
Se actualizó el protocolo para tomar datos de presión y temperatura en punto flotante y estado del sensor.
Se incorporó un watchdog para controlar la pérdida de comuniación pasado un lapso configurable de tiempo
Se incorporó un mecanismo de alerta por pantalla de las situaciones anómalas
Se incorporó un panel para log de datos


POR HACER
- Desarrollo del CRC para la lectura

- Con el WEMOS conectado a PILAS: evaluar tasa de lectura, pérdida de datos, autonomía.

- Pedir la hoja de aplicación 40AN7000, para ver cómo está codificada la temperatura en los datos que se reciben, y asegurar el 

- Conseguir la hoja de datos para el sensor usado (1A-48-060-BDAP) porque de allí se toman los valores P_min y P_max para calcular la presión.  Actualmente se tomaron los valores de la página 10 del instructivo de uso (intrasense-user-instructions-amsys-datasheet.pdf) pero corresponde al modelo cuyo código termina en -ADAR.


OBSERVACIONES
- Si utilizo la PC como hotspot, el wifi se conecta más rápido. Está durmiendo en promedio 15.5s con un desvío estándar de 1s respetando un muestreo de 20s. Cada tanto se pierde un ciclo de adquisición. Pero así como está resulta muy estable.

- Probar contra otro AP que no sea la PC. Se me ocurre que los picos esporádicos que ocurren en el delay del sleep se deben a que la PC justo está haciendo algo y hace esperar al WEMOS al conectarse.


       
